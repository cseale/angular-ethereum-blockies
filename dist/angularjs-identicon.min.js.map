{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angularjs-identicon.min.js","webpack:///webpack/bootstrap 682f05faeeaa02be51bd","webpack:///./angularjs-identicon.js","webpack:///./index.js","webpack:///./~/identicon.js/identicon.js","webpack:///./~/identicon.js/pnglib.js","webpack:///external \"angular\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_angular","_angular2","_identicon","_identicon2","directive","restrict","template","replace","scope","seed","options","link","$scope","data","size","toString","format","src","PNGlib","window","Identicon","hash","length","defaults","background","margin","saturation","brightness","arguments","undefined","hue","parseInt","substr","foreground","hsl2rgb","image","isSvg","Svg","render","color","baseMargin","Math","floor","cell","bg","apply","fg","charAt","rectangle","x","y","w","h","rectangles","push","j","buffer","index","b","raw","getDump","getBase64","match","r","g","a","values","map","round","join","xml","rect","stroke","btoa","write","offs","byte2","String","fromCharCode","byte4","byte2lsb","width","height","depth","pix_size","data_size","ihdr_offs","ihdr_size","plte_offs","plte_size","trns_offs","trns_size","idat_offs","idat_size","iend_offs","iend_size","buffer_size","Array","palette","pindex","_crc32","header","bits","red","green","blue","alpha","ndx","c1","c2","c3","e1","e2","e3","e4","ch","charCodeAt","crc32","png","crc","s1","s2"],"mappings":"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","file":"angularjs-identicon.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularEthereumidenticon\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"angularEthereumidenticon\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularEthereumidenticon\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"angularEthereumidenticon\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _angular = __webpack_require__(4);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _identicon = __webpack_require__(2);\n\nvar _identicon2 = _interopRequireDefault(_identicon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_SIZE = 32;\n\n_angular2.default.module('angularjs-identicon', []).directive('identicon', function () {\n  return {\n    restrict: 'E',\n    template: '<img width={{size}} height={{size}} src=\"{{src}}\">',\n    replace: false,\n    scope: {\n      seed: '@',\n      options: '='\n    },\n    link: function link($scope) {\n      var options = $scope.options || {};\n      var data = new _identicon2.default($scope.seed, options || { size: DEFAULT_SIZE }).toString();\n      var format = $scope.options.format === 'svg' ? 'svg+xml' : 'png';\n\n      // Render\n      $scope.size = options.size || DEFAULT_SIZE;\n      $scope.src = 'data:image/' + format + ';base64,' + data;\n    }\n  };\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(0);\n\nexports.default = 'angularjs-identicon';\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Identicon.js 2.3.1\n * http://github.com/stewartlord/identicon.js\n *\n * PNGLib required for PNG output\n * http://www.xarg.org/download/pnglib.js\n *\n * Copyright 2017, Stewart Lord\n * Released under the BSD license\n * http://www.opensource.org/licenses/bsd-license.php\n */\n\n(function() {\n    var PNGlib;\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        PNGlib = __webpack_require__(3);\n    } else {\n        PNGlib = window.PNGlib;\n    }\n\n    var Identicon = function(hash, options){\n        if (typeof(hash) !== 'string' || hash.length < 15) {\n            throw 'A hash of at least 15 characters is required.';\n        }\n\n        this.defaults = {\n            background: [240, 240, 240, 255],\n            margin:     0.08,\n            size:       64,\n            saturation: 0.7,\n            brightness: 0.5,\n            format:     'png'\n        };\n\n        this.options = typeof(options) === 'object' ? options : this.defaults;\n\n        // backward compatibility with old constructor (hash, size, margin)\n        if (typeof(arguments[1]) === 'number') { this.options.size   = arguments[1]; }\n        if (arguments[2])                      { this.options.margin = arguments[2]; }\n\n        this.hash        = hash\n        this.background  = this.options.background || this.defaults.background;\n        this.size        = this.options.size       || this.defaults.size;\n        this.format      = this.options.format     || this.defaults.format;\n        this.margin      = this.options.margin !== undefined ? this.options.margin : this.defaults.margin;\n\n        // foreground defaults to last 7 chars as hue at 70% saturation, 50% brightness\n        var hue          = parseInt(this.hash.substr(-7), 16) / 0xfffffff;\n        var saturation   = this.options.saturation || this.defaults.saturation;\n        var brightness   = this.options.brightness || this.defaults.brightness;\n        this.foreground  = this.options.foreground || this.hsl2rgb(hue, saturation, brightness);\n    };\n\n    Identicon.prototype = {\n        background: null,\n        foreground: null,\n        hash:       null,\n        margin:     null,\n        size:       null,\n        format:     null,\n\n        image: function(){\n            return this.isSvg()\n                ? new Svg(this.size, this.foreground, this.background)\n                : new PNGlib(this.size, this.size, 256);\n        },\n\n        render: function(){\n            var image      = this.image(),\n                size       = this.size,\n                baseMargin = Math.floor(size * this.margin),\n                cell       = Math.floor((size - (baseMargin * 2)) / 5),\n                margin     = Math.floor((size - cell * 5) / 2),\n                bg         = image.color.apply(image, this.background),\n                fg         = image.color.apply(image, this.foreground);\n\n            // the first 15 characters of the hash control the pixels (even/odd)\n            // they are drawn down the middle first, then mirrored outwards\n            var i, color;\n            for (i = 0; i < 15; i++) {\n                color = parseInt(this.hash.charAt(i), 16) % 2 ? bg : fg;\n                if (i < 5) {\n                    this.rectangle(2 * cell + margin, i * cell + margin, cell, cell, color, image);\n                } else if (i < 10) {\n                    this.rectangle(1 * cell + margin, (i - 5) * cell + margin, cell, cell, color, image);\n                    this.rectangle(3 * cell + margin, (i - 5) * cell + margin, cell, cell, color, image);\n                } else if (i < 15) {\n                    this.rectangle(0 * cell + margin, (i - 10) * cell + margin, cell, cell, color, image);\n                    this.rectangle(4 * cell + margin, (i - 10) * cell + margin, cell, cell, color, image);\n                }\n            }\n\n            return image;\n        },\n\n        rectangle: function(x, y, w, h, color, image){\n            if (this.isSvg()) {\n                image.rectangles.push({x: x, y: y, w: w, h: h, color: color});\n            } else {\n                var i, j;\n                for (i = x; i < x + w; i++) {\n                    for (j = y; j < y + h; j++) {\n                        image.buffer[image.index(i, j)] = color;\n                    }\n                }\n            }\n        },\n\n        // adapted from: https://gist.github.com/aemkei/1325937\n        hsl2rgb: function(h, s, b){\n            h *= 6;\n            s = [\n                b += s *= b < .5 ? b : 1 - b,\n                b - h % 1 * s * 2,\n                b -= s *= 2,\n                b,\n                b + h % 1 * s,\n                b + s\n            ];\n\n            return[\n                s[ ~~h    % 6 ] * 255, // red\n                s[ (h|16) % 6 ] * 255, // green\n                s[ (h|8)  % 6 ] * 255  // blue\n            ];\n        },\n\n        toString: function(raw){\n            // backward compatibility with old toString, default to base64\n            if (raw) {\n                return this.render().getDump();\n            } else {\n                return this.render().getBase64();\n            }\n        },\n\n        isSvg: function(){\n            return this.format.match(/svg/i)\n        }\n    };\n\n    var Svg = function(size, foreground, background){\n        this.size       = size;\n        this.foreground = this.color.apply(this, foreground);\n        this.background = this.color.apply(this, background);\n        this.rectangles = [];\n    };\n\n    Svg.prototype = {\n        size:       null,\n        foreground: null,\n        background: null,\n        rectangles: null,\n\n        color: function(r, g, b, a){\n            var values = [r, g, b].map(Math.round);\n            values.push((a >= 0) && (a <= 255) ? a/255 : 1);\n            return 'rgba(' + values.join(',') + ')';\n        },\n\n        getDump: function(){\n          var i,\n                xml,\n                rect,\n                fg     = this.foreground,\n                bg     = this.background,\n                stroke = this.size * 0.005;\n\n            xml = \"<svg xmlns='http://www.w3.org/2000/svg'\"\n                + \" width='\" + this.size + \"' height='\" + this.size + \"'\"\n                + \" style='background-color:\" + bg + \";'>\"\n                + \"<g style='fill:\" + fg + \"; stroke:\" + fg + \"; stroke-width:\" + stroke + \";'>\";\n\n            for (i = 0; i < this.rectangles.length; i++) {\n                rect = this.rectangles[i];\n                if (rect.color == bg) continue;\n                xml += \"<rect \"\n                    + \" x='\"      + rect.x + \"'\"\n                    + \" y='\"      + rect.y + \"'\"\n                    + \" width='\"  + rect.w + \"'\"\n                    + \" height='\" + rect.h + \"'\"\n                    + \"/>\";\n            }\n            xml += \"</g></svg>\"\n\n            return xml;\n        },\n\n        getBase64: function(){\n            return btoa(this.getDump());\n        }\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = Identicon;\n    } else {\n        window.Identicon = Identicon;\n    }\n})();\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n* A handy class to calculate color values.\n*\n* @version 1.0\n* @author Robert Eisele <robert@xarg.org>\n* @copyright Copyright (c) 2010, Robert Eisele\n* @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/\n* @license http://www.opensource.org/licenses/bsd-license.php BSD License\n*\n*/\n\n(function() {\n\n\t// helper functions for that ctx\n\tfunction write(buffer, offs) {\n\t\tfor (var i = 2; i < arguments.length; i++) {\n\t\t\tfor (var j = 0; j < arguments[i].length; j++) {\n\t\t\t\tbuffer[offs++] = arguments[i].charAt(j);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction byte2(w) {\n\t\treturn String.fromCharCode((w >> 8) & 255, w & 255);\n\t}\n\n\tfunction byte4(w) {\n\t\treturn String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\n\t}\n\n\tfunction byte2lsb(w) {\n\t\treturn String.fromCharCode(w & 255, (w >> 8) & 255);\n\t}\n\n\t// modified from original source to support NPM\n\tvar PNGlib = function(width,height,depth) {\n\n\t\tthis.width   = width;\n\t\tthis.height  = height;\n\t\tthis.depth   = depth;\n\n\t\t// pixel data and row filter identifier size\n\t\tthis.pix_size = height * (width + 1);\n\n\t\t// deflate header, pix_size, block headers, adler32 checksum\n\t\tthis.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\n\n\t\t// offsets and sizes of Png chunks\n\t\tthis.ihdr_offs = 0;\t\t\t\t\t\t\t\t\t// IHDR offset and size\n\t\tthis.ihdr_size = 4 + 4 + 13 + 4;\n\t\tthis.plte_offs = this.ihdr_offs + this.ihdr_size;\t// PLTE offset and size\n\t\tthis.plte_size = 4 + 4 + 3 * depth + 4;\n\t\tthis.trns_offs = this.plte_offs + this.plte_size;\t// tRNS offset and size\n\t\tthis.trns_size = 4 + 4 + depth + 4;\n\t\tthis.idat_offs = this.trns_offs + this.trns_size;\t// IDAT offset and size\n\t\tthis.idat_size = 4 + 4 + this.data_size + 4;\n\t\tthis.iend_offs = this.idat_offs + this.idat_size;\t// IEND offset and size\n\t\tthis.iend_size = 4 + 4 + 4;\n\t\tthis.buffer_size  = this.iend_offs + this.iend_size;\t// total PNG size\n\n\t\tthis.buffer  = new Array();\n\t\tthis.palette = new Object();\n\t\tthis.pindex  = 0;\n\n\t\tvar _crc32 = new Array();\n\n\t\t// initialize buffer with zero bytes\n\t\tfor (var i = 0; i < this.buffer_size; i++) {\n\t\t\tthis.buffer[i] = \"\\x00\";\n\t\t}\n\n\t\t// initialize non-zero elements\n\t\twrite(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\n\t\twrite(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\n\t\twrite(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\n\t\twrite(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\n\t\twrite(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\n\n\t\t// initialize deflate header\n\t\tvar header = ((8 + (7 << 4)) << 8) | (3 << 6);\n\t\theader+= 31 - (header % 31);\n\n\t\twrite(this.buffer, this.idat_offs + 8, byte2(header));\n\n\t\t// initialize deflate block headers\n\t\tfor (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\n\t\t\tvar size, bits;\n\t\t\tif (i + 0xffff < this.pix_size) {\n\t\t\t\tsize = 0xffff;\n\t\t\t\tbits = \"\\x00\";\n\t\t\t} else {\n\t\t\t\tsize = this.pix_size - (i << 16) - i;\n\t\t\t\tbits = \"\\x01\";\n\t\t\t}\n\t\t\twrite(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\n\t\t}\n\n\t\t/* Create crc32 lookup table */\n\t\tfor (var i = 0; i < 256; i++) {\n\t\t\tvar c = i;\n\t\t\tfor (var j = 0; j < 8; j++) {\n\t\t\t\tif (c & 1) {\n\t\t\t\t\tc = -306674912 ^ ((c >> 1) & 0x7fffffff);\n\t\t\t\t} else {\n\t\t\t\t\tc = (c >> 1) & 0x7fffffff;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_crc32[i] = c;\n\t\t}\n\n\t\t// compute the index into a png for a given pixel\n\t\tthis.index = function(x,y) {\n\t\t\tvar i = y * (this.width + 1) + x + 1;\n\t\t\tvar j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\n\t\t\treturn j;\n\t\t}\n\n\t\t// convert a color and build up the palette\n\t\tthis.color = function(red, green, blue, alpha) {\n\n\t\t\talpha = alpha >= 0 ? alpha : 255;\n\t\t\tvar color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\n\n\t\t\tif (typeof this.palette[color] == \"undefined\") {\n\t\t\t\tif (this.pindex == this.depth) return \"\\x00\";\n\n\t\t\t\tvar ndx = this.plte_offs + 8 + 3 * this.pindex;\n\n\t\t\t\tthis.buffer[ndx + 0] = String.fromCharCode(red);\n\t\t\t\tthis.buffer[ndx + 1] = String.fromCharCode(green);\n\t\t\t\tthis.buffer[ndx + 2] = String.fromCharCode(blue);\n\t\t\t\tthis.buffer[this.trns_offs+8+this.pindex] = String.fromCharCode(alpha);\n\n\t\t\t\tthis.palette[color] = String.fromCharCode(this.pindex++);\n\t\t\t}\n\t\t\treturn this.palette[color];\n\t\t}\n\n\t\t// output a PNG string, Base64 encoded\n\t\tthis.getBase64 = function() {\n\n\t\t\tvar s = this.getDump();\n\n\t\t\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\t\t\tvar c1, c2, c3, e1, e2, e3, e4;\n\t\t\tvar l = s.length;\n\t\t\tvar i = 0;\n\t\t\tvar r = \"\";\n\n\t\t\tdo {\n\t\t\t\tc1 = s.charCodeAt(i);\n\t\t\t\te1 = c1 >> 2;\n\t\t\t\tc2 = s.charCodeAt(i+1);\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\n\t\t\t\tc3 = s.charCodeAt(i+2);\n\t\t\t\tif (l < i+2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\n\t\t\t\tif (l < i+3) { e4 = 64; } else { e4 = c3 & 0x3f; }\n\t\t\t\tr+= ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\n\t\t\t} while ((i+= 3) < l);\n\t\t\treturn r;\n\t\t}\n\n\t\t// output a PNG string\n\t\tthis.getDump = function() {\n\n\t\t\t// compute adler32 of output pixels + row filter bytes\n\t\t\tvar BASE = 65521; /* largest prime smaller than 65536 */\n\t\t\tvar NMAX = 5552;  /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\n\t\t\tvar s1 = 1;\n\t\t\tvar s2 = 0;\n\t\t\tvar n = NMAX;\n\n\t\t\tfor (var y = 0; y < this.height; y++) {\n\t\t\t\tfor (var x = -1; x < this.width; x++) {\n\t\t\t\t\ts1+= this.buffer[this.index(x, y)].charCodeAt(0);\n\t\t\t\t\ts2+= s1;\n\t\t\t\t\tif ((n-= 1) == 0) {\n\t\t\t\t\t\ts1%= BASE;\n\t\t\t\t\t\ts2%= BASE;\n\t\t\t\t\t\tn = NMAX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ts1%= BASE;\n\t\t\ts2%= BASE;\n\t\t\twrite(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\n\n\t\t\t// compute crc32 of the PNG chunks\n\t\t\tfunction crc32(png, offs, size) {\n\t\t\t\tvar crc = -1;\n\t\t\t\tfor (var i = 4; i < size-4; i += 1) {\n\t\t\t\t\tcrc = _crc32[(crc ^ png[offs+i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\n\t\t\t\t}\n\t\t\t\twrite(png, offs+size-4, byte4(crc ^ -1));\n\t\t\t}\n\n\t\t\tcrc32(this.buffer, this.ihdr_offs, this.ihdr_size);\n\t\t\tcrc32(this.buffer, this.plte_offs, this.plte_size);\n\t\t\tcrc32(this.buffer, this.trns_offs, this.trns_size);\n\t\t\tcrc32(this.buffer, this.idat_offs, this.idat_size);\n\t\t\tcrc32(this.buffer, this.iend_offs, this.iend_size);\n\n\t\t\t// convert PNG to string\n\t\t\treturn \"\\x89PNG\\r\\n\\x1a\\n\"+this.buffer.join('');\n\t\t}\n\t}\n\n\t// modified from original source to support NPM\n\tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t\tmodule.exports = PNGlib;\n\t} else {\n\t\twindow.PNGlib = PNGlib;\n\t}\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// angularjs-identicon.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 682f05faeeaa02be51bd","import angular from 'angular';\nimport Identicon from 'identicon.js';\n\nconst DEFAULT_SIZE = 32;\n\nangular\n  .module('angularjs-identicon', [])\n  .directive('identicon', function() {\n    return {\n      restrict: 'E',\n      template: '<img width={{size}} height={{size}} src=\"{{src}}\">',\n      replace: false,\n      scope: {\n        seed: '@',\n        options: '='\n      },\n      link: function ($scope) {\n        const options = $scope.options || {};\n        const data = new Identicon($scope.seed, options || {size: DEFAULT_SIZE}).toString();\n        const format = ($scope.options.format === 'svg') ? 'svg+xml' : 'png';\n\n        // Render\n        $scope.size = options.size || DEFAULT_SIZE;\n        $scope.src = `data:image/${format};base64,${data}`;\n      }\n    };\n  });\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./angularjs-identicon.js","import './angularjs-identicon';\nexport default 'angularjs-identicon';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\n * Identicon.js 2.3.1\n * http://github.com/stewartlord/identicon.js\n *\n * PNGLib required for PNG output\n * http://www.xarg.org/download/pnglib.js\n *\n * Copyright 2017, Stewart Lord\n * Released under the BSD license\n * http://www.opensource.org/licenses/bsd-license.php\n */\n\n(function() {\n    var PNGlib;\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        PNGlib = require('./pnglib');\n    } else {\n        PNGlib = window.PNGlib;\n    }\n\n    var Identicon = function(hash, options){\n        if (typeof(hash) !== 'string' || hash.length < 15) {\n            throw 'A hash of at least 15 characters is required.';\n        }\n\n        this.defaults = {\n            background: [240, 240, 240, 255],\n            margin:     0.08,\n            size:       64,\n            saturation: 0.7,\n            brightness: 0.5,\n            format:     'png'\n        };\n\n        this.options = typeof(options) === 'object' ? options : this.defaults;\n\n        // backward compatibility with old constructor (hash, size, margin)\n        if (typeof(arguments[1]) === 'number') { this.options.size   = arguments[1]; }\n        if (arguments[2])                      { this.options.margin = arguments[2]; }\n\n        this.hash        = hash\n        this.background  = this.options.background || this.defaults.background;\n        this.size        = this.options.size       || this.defaults.size;\n        this.format      = this.options.format     || this.defaults.format;\n        this.margin      = this.options.margin !== undefined ? this.options.margin : this.defaults.margin;\n\n        // foreground defaults to last 7 chars as hue at 70% saturation, 50% brightness\n        var hue          = parseInt(this.hash.substr(-7), 16) / 0xfffffff;\n        var saturation   = this.options.saturation || this.defaults.saturation;\n        var brightness   = this.options.brightness || this.defaults.brightness;\n        this.foreground  = this.options.foreground || this.hsl2rgb(hue, saturation, brightness);\n    };\n\n    Identicon.prototype = {\n        background: null,\n        foreground: null,\n        hash:       null,\n        margin:     null,\n        size:       null,\n        format:     null,\n\n        image: function(){\n            return this.isSvg()\n                ? new Svg(this.size, this.foreground, this.background)\n                : new PNGlib(this.size, this.size, 256);\n        },\n\n        render: function(){\n            var image      = this.image(),\n                size       = this.size,\n                baseMargin = Math.floor(size * this.margin),\n                cell       = Math.floor((size - (baseMargin * 2)) / 5),\n                margin     = Math.floor((size - cell * 5) / 2),\n                bg         = image.color.apply(image, this.background),\n                fg         = image.color.apply(image, this.foreground);\n\n            // the first 15 characters of the hash control the pixels (even/odd)\n            // they are drawn down the middle first, then mirrored outwards\n            var i, color;\n            for (i = 0; i < 15; i++) {\n                color = parseInt(this.hash.charAt(i), 16) % 2 ? bg : fg;\n                if (i < 5) {\n                    this.rectangle(2 * cell + margin, i * cell + margin, cell, cell, color, image);\n                } else if (i < 10) {\n                    this.rectangle(1 * cell + margin, (i - 5) * cell + margin, cell, cell, color, image);\n                    this.rectangle(3 * cell + margin, (i - 5) * cell + margin, cell, cell, color, image);\n                } else if (i < 15) {\n                    this.rectangle(0 * cell + margin, (i - 10) * cell + margin, cell, cell, color, image);\n                    this.rectangle(4 * cell + margin, (i - 10) * cell + margin, cell, cell, color, image);\n                }\n            }\n\n            return image;\n        },\n\n        rectangle: function(x, y, w, h, color, image){\n            if (this.isSvg()) {\n                image.rectangles.push({x: x, y: y, w: w, h: h, color: color});\n            } else {\n                var i, j;\n                for (i = x; i < x + w; i++) {\n                    for (j = y; j < y + h; j++) {\n                        image.buffer[image.index(i, j)] = color;\n                    }\n                }\n            }\n        },\n\n        // adapted from: https://gist.github.com/aemkei/1325937\n        hsl2rgb: function(h, s, b){\n            h *= 6;\n            s = [\n                b += s *= b < .5 ? b : 1 - b,\n                b - h % 1 * s * 2,\n                b -= s *= 2,\n                b,\n                b + h % 1 * s,\n                b + s\n            ];\n\n            return[\n                s[ ~~h    % 6 ] * 255, // red\n                s[ (h|16) % 6 ] * 255, // green\n                s[ (h|8)  % 6 ] * 255  // blue\n            ];\n        },\n\n        toString: function(raw){\n            // backward compatibility with old toString, default to base64\n            if (raw) {\n                return this.render().getDump();\n            } else {\n                return this.render().getBase64();\n            }\n        },\n\n        isSvg: function(){\n            return this.format.match(/svg/i)\n        }\n    };\n\n    var Svg = function(size, foreground, background){\n        this.size       = size;\n        this.foreground = this.color.apply(this, foreground);\n        this.background = this.color.apply(this, background);\n        this.rectangles = [];\n    };\n\n    Svg.prototype = {\n        size:       null,\n        foreground: null,\n        background: null,\n        rectangles: null,\n\n        color: function(r, g, b, a){\n            var values = [r, g, b].map(Math.round);\n            values.push((a >= 0) && (a <= 255) ? a/255 : 1);\n            return 'rgba(' + values.join(',') + ')';\n        },\n\n        getDump: function(){\n          var i,\n                xml,\n                rect,\n                fg     = this.foreground,\n                bg     = this.background,\n                stroke = this.size * 0.005;\n\n            xml = \"<svg xmlns='http://www.w3.org/2000/svg'\"\n                + \" width='\" + this.size + \"' height='\" + this.size + \"'\"\n                + \" style='background-color:\" + bg + \";'>\"\n                + \"<g style='fill:\" + fg + \"; stroke:\" + fg + \"; stroke-width:\" + stroke + \";'>\";\n\n            for (i = 0; i < this.rectangles.length; i++) {\n                rect = this.rectangles[i];\n                if (rect.color == bg) continue;\n                xml += \"<rect \"\n                    + \" x='\"      + rect.x + \"'\"\n                    + \" y='\"      + rect.y + \"'\"\n                    + \" width='\"  + rect.w + \"'\"\n                    + \" height='\" + rect.h + \"'\"\n                    + \"/>\";\n            }\n            xml += \"</g></svg>\"\n\n            return xml;\n        },\n\n        getBase64: function(){\n            return btoa(this.getDump());\n        }\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = Identicon;\n    } else {\n        window.Identicon = Identicon;\n    }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/identicon.js/identicon.js\n// module id = 2\n// module chunks = 0","/**\n* A handy class to calculate color values.\n*\n* @version 1.0\n* @author Robert Eisele <robert@xarg.org>\n* @copyright Copyright (c) 2010, Robert Eisele\n* @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/\n* @license http://www.opensource.org/licenses/bsd-license.php BSD License\n*\n*/\n\n(function() {\n\n\t// helper functions for that ctx\n\tfunction write(buffer, offs) {\n\t\tfor (var i = 2; i < arguments.length; i++) {\n\t\t\tfor (var j = 0; j < arguments[i].length; j++) {\n\t\t\t\tbuffer[offs++] = arguments[i].charAt(j);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction byte2(w) {\n\t\treturn String.fromCharCode((w >> 8) & 255, w & 255);\n\t}\n\n\tfunction byte4(w) {\n\t\treturn String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\n\t}\n\n\tfunction byte2lsb(w) {\n\t\treturn String.fromCharCode(w & 255, (w >> 8) & 255);\n\t}\n\n\t// modified from original source to support NPM\n\tvar PNGlib = function(width,height,depth) {\n\n\t\tthis.width   = width;\n\t\tthis.height  = height;\n\t\tthis.depth   = depth;\n\n\t\t// pixel data and row filter identifier size\n\t\tthis.pix_size = height * (width + 1);\n\n\t\t// deflate header, pix_size, block headers, adler32 checksum\n\t\tthis.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\n\n\t\t// offsets and sizes of Png chunks\n\t\tthis.ihdr_offs = 0;\t\t\t\t\t\t\t\t\t// IHDR offset and size\n\t\tthis.ihdr_size = 4 + 4 + 13 + 4;\n\t\tthis.plte_offs = this.ihdr_offs + this.ihdr_size;\t// PLTE offset and size\n\t\tthis.plte_size = 4 + 4 + 3 * depth + 4;\n\t\tthis.trns_offs = this.plte_offs + this.plte_size;\t// tRNS offset and size\n\t\tthis.trns_size = 4 + 4 + depth + 4;\n\t\tthis.idat_offs = this.trns_offs + this.trns_size;\t// IDAT offset and size\n\t\tthis.idat_size = 4 + 4 + this.data_size + 4;\n\t\tthis.iend_offs = this.idat_offs + this.idat_size;\t// IEND offset and size\n\t\tthis.iend_size = 4 + 4 + 4;\n\t\tthis.buffer_size  = this.iend_offs + this.iend_size;\t// total PNG size\n\n\t\tthis.buffer  = new Array();\n\t\tthis.palette = new Object();\n\t\tthis.pindex  = 0;\n\n\t\tvar _crc32 = new Array();\n\n\t\t// initialize buffer with zero bytes\n\t\tfor (var i = 0; i < this.buffer_size; i++) {\n\t\t\tthis.buffer[i] = \"\\x00\";\n\t\t}\n\n\t\t// initialize non-zero elements\n\t\twrite(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\n\t\twrite(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\n\t\twrite(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\n\t\twrite(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\n\t\twrite(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\n\n\t\t// initialize deflate header\n\t\tvar header = ((8 + (7 << 4)) << 8) | (3 << 6);\n\t\theader+= 31 - (header % 31);\n\n\t\twrite(this.buffer, this.idat_offs + 8, byte2(header));\n\n\t\t// initialize deflate block headers\n\t\tfor (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\n\t\t\tvar size, bits;\n\t\t\tif (i + 0xffff < this.pix_size) {\n\t\t\t\tsize = 0xffff;\n\t\t\t\tbits = \"\\x00\";\n\t\t\t} else {\n\t\t\t\tsize = this.pix_size - (i << 16) - i;\n\t\t\t\tbits = \"\\x01\";\n\t\t\t}\n\t\t\twrite(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\n\t\t}\n\n\t\t/* Create crc32 lookup table */\n\t\tfor (var i = 0; i < 256; i++) {\n\t\t\tvar c = i;\n\t\t\tfor (var j = 0; j < 8; j++) {\n\t\t\t\tif (c & 1) {\n\t\t\t\t\tc = -306674912 ^ ((c >> 1) & 0x7fffffff);\n\t\t\t\t} else {\n\t\t\t\t\tc = (c >> 1) & 0x7fffffff;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_crc32[i] = c;\n\t\t}\n\n\t\t// compute the index into a png for a given pixel\n\t\tthis.index = function(x,y) {\n\t\t\tvar i = y * (this.width + 1) + x + 1;\n\t\t\tvar j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\n\t\t\treturn j;\n\t\t}\n\n\t\t// convert a color and build up the palette\n\t\tthis.color = function(red, green, blue, alpha) {\n\n\t\t\talpha = alpha >= 0 ? alpha : 255;\n\t\t\tvar color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\n\n\t\t\tif (typeof this.palette[color] == \"undefined\") {\n\t\t\t\tif (this.pindex == this.depth) return \"\\x00\";\n\n\t\t\t\tvar ndx = this.plte_offs + 8 + 3 * this.pindex;\n\n\t\t\t\tthis.buffer[ndx + 0] = String.fromCharCode(red);\n\t\t\t\tthis.buffer[ndx + 1] = String.fromCharCode(green);\n\t\t\t\tthis.buffer[ndx + 2] = String.fromCharCode(blue);\n\t\t\t\tthis.buffer[this.trns_offs+8+this.pindex] = String.fromCharCode(alpha);\n\n\t\t\t\tthis.palette[color] = String.fromCharCode(this.pindex++);\n\t\t\t}\n\t\t\treturn this.palette[color];\n\t\t}\n\n\t\t// output a PNG string, Base64 encoded\n\t\tthis.getBase64 = function() {\n\n\t\t\tvar s = this.getDump();\n\n\t\t\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\t\t\tvar c1, c2, c3, e1, e2, e3, e4;\n\t\t\tvar l = s.length;\n\t\t\tvar i = 0;\n\t\t\tvar r = \"\";\n\n\t\t\tdo {\n\t\t\t\tc1 = s.charCodeAt(i);\n\t\t\t\te1 = c1 >> 2;\n\t\t\t\tc2 = s.charCodeAt(i+1);\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\n\t\t\t\tc3 = s.charCodeAt(i+2);\n\t\t\t\tif (l < i+2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\n\t\t\t\tif (l < i+3) { e4 = 64; } else { e4 = c3 & 0x3f; }\n\t\t\t\tr+= ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\n\t\t\t} while ((i+= 3) < l);\n\t\t\treturn r;\n\t\t}\n\n\t\t// output a PNG string\n\t\tthis.getDump = function() {\n\n\t\t\t// compute adler32 of output pixels + row filter bytes\n\t\t\tvar BASE = 65521; /* largest prime smaller than 65536 */\n\t\t\tvar NMAX = 5552;  /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\n\t\t\tvar s1 = 1;\n\t\t\tvar s2 = 0;\n\t\t\tvar n = NMAX;\n\n\t\t\tfor (var y = 0; y < this.height; y++) {\n\t\t\t\tfor (var x = -1; x < this.width; x++) {\n\t\t\t\t\ts1+= this.buffer[this.index(x, y)].charCodeAt(0);\n\t\t\t\t\ts2+= s1;\n\t\t\t\t\tif ((n-= 1) == 0) {\n\t\t\t\t\t\ts1%= BASE;\n\t\t\t\t\t\ts2%= BASE;\n\t\t\t\t\t\tn = NMAX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ts1%= BASE;\n\t\t\ts2%= BASE;\n\t\t\twrite(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\n\n\t\t\t// compute crc32 of the PNG chunks\n\t\t\tfunction crc32(png, offs, size) {\n\t\t\t\tvar crc = -1;\n\t\t\t\tfor (var i = 4; i < size-4; i += 1) {\n\t\t\t\t\tcrc = _crc32[(crc ^ png[offs+i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\n\t\t\t\t}\n\t\t\t\twrite(png, offs+size-4, byte4(crc ^ -1));\n\t\t\t}\n\n\t\t\tcrc32(this.buffer, this.ihdr_offs, this.ihdr_size);\n\t\t\tcrc32(this.buffer, this.plte_offs, this.plte_size);\n\t\t\tcrc32(this.buffer, this.trns_offs, this.trns_size);\n\t\t\tcrc32(this.buffer, this.idat_offs, this.idat_size);\n\t\t\tcrc32(this.buffer, this.iend_offs, this.iend_size);\n\n\t\t\t// convert PNG to string\n\t\t\treturn \"\\x89PNG\\r\\n\\x1a\\n\"+this.buffer.join('');\n\t\t}\n\t}\n\n\t// modified from original source to support NPM\n\tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t\tmodule.exports = PNGlib;\n\t} else {\n\t\twindow.PNGlib = PNGlib;\n\t}\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/identicon.js/pnglib.js\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}